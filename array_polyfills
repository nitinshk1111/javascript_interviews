const x = [1,2,3,4,5,6,7,8,9];


Array.prototype.myMap = function(cb){
		const arr = this;
    const result = [];
    for(let i=0;i < arr.length;i++){
    		result.push(cb(arr[i],i, arr));
    }
    return result;
}

const z = x.myMap((a,i, array) => a+"_");
/* console.log(z) */


Array.prototype.myFilter = function(cb){
		const arr = this;
    const result = [];
    for(let i=0;i < arr.length;i++){
    		if(cb(arr[i],i, arr))result.push(arr[i]);
    }
    return result;
}


const z1 = x.myFilter((a,i, array) => a%2===0);
/* console.log(z1) */


/* 
const sum = numbers.reduce((accumulator, currentValuen,index,array) => {
  return accumulator + currentValue;
}, 0); */




Array.prototype.myReduce = function(cb, initialValue){
		const arr = this;
    let acummalator = initialValue!==undefined ?  initialValue:  arr[0];
    for(let i=initialValue!==undefined ? 0: 1; i < arr.length;i++){
    		acummalator = cb(acummalator, arr[i],i ,arr);
        
    }
    return acummalator;
}

const z2 = x.myReduce((acc,curr,i, x) => {
	return acc+curr;
},4);


console.log(z2)



